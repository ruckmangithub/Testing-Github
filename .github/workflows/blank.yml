name: blank
on:
  workflow_dispatch:
jobs:
  TestingJob:
      name: TestingJob
      runs-on: ubuntu-latest
      steps:
      - name: TestingJob
        run: echo "Testing Job"
      
  Deploy:
      name: Deploy
      needs: TestingJob
      runs-on: ubuntu-latest
      steps:     
        - name: ServiceNow DevOps Change Automation
          uses: ServiceNow/servicenow-devops-change@v4.1.0
          with:
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            instance-url: ${{ secrets.SN_INSTANCE_URL_ADEVOPS2 }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID_ADEVOPS2 }}
            context-github: ${{ toJSON(github) }}
            job-name: 'Deploy'
            change-request: '{"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
            interval: '100'
            timeout: '3600'
            changeCreationTimeOut: '3600'
            abortOnChangeCreationFailure: true
            abortOnChangeStepTimeout: true
            deployment-gate: '{"environment":"deploy-gates-demo","jobName":"Deploy"}'
        - name: Output of Change Creation
          run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }}" >> $GITHUB_OUTPUT
  Prod:
      name: 'Prod'
      needs: 'Deploy'
      environment: deploy-gates-demo
      runs-on: ubuntu-latest
      steps:
      - name: Prod
        run: echo "Prod"
